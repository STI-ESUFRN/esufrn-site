# Generated by Django 4.2.11 on 2025-09-09 18:51
from django.db import migrations, models
import django.utils.timezone
import uuid

def gen_unique_uids(apps, schema_editor):
    Pessoa = apps.get_model("registro", "Pessoa")
    # Use iterator to avoid carregar tudo na memória (QuerySet é lazy, mas iterar .all() é ok)
    for p in Pessoa.objects.all():
        # Se já tiver uid nulo ou duplicado, gera um novo.
        if not p.uid:
            new = uuid.uuid4()
            # garante unicidade consultando o banco
            while Pessoa.objects.filter(uid=new).exists():
                new = uuid.uuid4()
            p.uid = new
            p.save(update_fields=["uid"])

class Migration(migrations.Migration):

    dependencies = [
        ('registro', '0008_alter_pessoa_numero'),
    ]

    operations = [
        migrations.AddField(
            model_name='pessoa',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Criado em'),
            preserve_default=False,
        ),
        # adiciona o campo sem unique e permitindo null para não quebrar nada
        migrations.AddField(
            model_name='pessoa',
            name='uid',
            field=models.UUIDField(null=True, db_index=True, editable=False, verbose_name='ID público'),
        ),
        migrations.AddField(
            model_name='pessoa',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Atualizado em'),
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='numero',
            field=models.PositiveIntegerField(verbose_name='Nº'),
        ),
        # popula uids únicos para todas as linhas existentes
        migrations.RunPython(gen_unique_uids, reverse_code=migrations.RunPython.noop),
        # agora altera para unique e null=False (já estão todos preenchidos)
        migrations.AlterField(
            model_name='pessoa',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='ID público'),
        ),
    ]