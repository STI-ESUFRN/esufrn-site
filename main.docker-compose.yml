version: "3.9"

services:
    web:
        build: .
        restart: always
        pull_policy: always
        env_file: .env
        command: ../scripts/start-api.sh
        depends_on:
            - postgres
            - redis
        volumes:
            - ./src:/app/src

    postgres:
        image: postgres
        restart: always
        environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data

    redis:
        image: redis
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data

    celery-worker:
        build: .
        restart: always
        pull_policy: always
        env_file: .env
        depends_on:
            - redis
        command: ../scripts/start-celery-worker.sh
        volumes:
            - ./src:/app/src

    celery-beat:
        build: .
        restart: always
        pull_policy: always
        env_file: .env
        depends_on:
            - redis
        command: ../scripts/start-celery-beat.sh
        volumes:
            - ./src:/app/src

    pgadmin:
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        expose:
            - 80
        depends_on:
            - postgres

    nginx:
        build:
            context: nginx
        restart: always
        ports:
            - 80:80
            - 443:443
        depends_on:
            - web
        volumes:
            - ./src/staticfiles:/usr/share/nginx/html/staticfiles:ro
            - ./src/media:/usr/share/nginx/html/media:ro
            - ./src/templates:/usr/share/nginx/html/templates:ro
            - ./nginx/ssl:/ssl:ro

volumes:
    postgres-data:
    redis-data:
    pgadmin-data:
